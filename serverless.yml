service: slowcovid
app: slowcovid
org: jeffreysilver

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
  vpc:
    subnetIds:
      - subnet-07fb30e724091f148
  environment:
    AUTH_USERNAME: ${file(.config.yml):AUTH_USERNAME}
    AUTH_PASSWORD: ${file(.config.yml):AUTH_PASSWORD}
   

functions:
  
  registration:
    handler: registration.handle_registration
    events:
      - http:
          path: registration
          method: post
          cors: true

  healthcheck:
    handler: healthcheck.healthcheck
    events:
      - http:
          path: /healthcheck
          method: get
          cors: true


resources:
  Resources:
    AWSLambdaVPCAccessExecutionRole:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        Description: Creating policy for vpc and lambda.
        Roles:
          - { "Ref": "IamRoleLambdaExecution" }
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DeleteNetworkInterface
              Resource: "*"
plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true